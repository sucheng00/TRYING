ARM GAS  /tmp/ccygdS7z.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 2
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"gimbal_task.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.fric_control_loop,"ax",%progbits
  20              		.align	1
  21              		.p2align 2,,3
  22              		.global	fric_control_loop
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	fric_control_loop:
  28              	.LFB241:
  29              		.file 1 "application/src/gimbal_task.c"
   1:application/src/gimbal_task.c **** /*
   2:application/src/gimbal_task.c ****  * @brief      完成对两个2305电机的输出控制、 微动开关的读取
   3:application/src/gimbal_task.c ****  */
   4:application/src/gimbal_task.c **** #include "gimbal_task.h"
   5:application/src/gimbal_task.c **** #include "math.h"
   6:application/src/gimbal_task.c **** 
   7:application/src/gimbal_task.c **** #define shoot_fric_off() fric_off()           
   8:application/src/gimbal_task.c **** 
   9:application/src/gimbal_task.c **** #if INCLUDE_uxTaskGetStackHighWaterMark
  10:application/src/gimbal_task.c **** uint32_t gimbal_high_water;
  11:application/src/gimbal_task.c **** #endif
  12:application/src/gimbal_task.c **** 
  13:application/src/gimbal_task.c **** ramp_function_source_t fric1_ramp,fric2_ramp;
  14:application/src/gimbal_task.c **** void gimbal_task(void const *pvParameters)
  15:application/src/gimbal_task.c **** {
  16:application/src/gimbal_task.c ****   vTaskDelay(GIMBAL_TASK_INIT_TIME);
  17:application/src/gimbal_task.c ****   fric_init();
  18:application/src/gimbal_task.c ****   while (1)
  19:application/src/gimbal_task.c ****   {
  20:application/src/gimbal_task.c ****     fric_control_loop();
  21:application/src/gimbal_task.c ****     micro_sw_update();
  22:application/src/gimbal_task.c **** 
  23:application/src/gimbal_task.c **** 
  24:application/src/gimbal_task.c **** #if GIMBAL_TEST_MODE
  25:application/src/gimbal_task.c ****     J_scope_gimbal_test();
  26:application/src/gimbal_task.c **** #endif
  27:application/src/gimbal_task.c ****     vTaskDelay(GIMBAL_CONTROL_TIME);
  28:application/src/gimbal_task.c **** 
  29:application/src/gimbal_task.c **** #if INCLUDE_uxTaskGetStackHighWaterMark
ARM GAS  /tmp/ccygdS7z.s 			page 2


  30:application/src/gimbal_task.c ****     gimbal_high_water = uxTaskGetStackHighWaterMark(NULL);
  31:application/src/gimbal_task.c **** #endif
  32:application/src/gimbal_task.c ****   }
  33:application/src/gimbal_task.c **** }
  34:application/src/gimbal_task.c **** 
  35:application/src/gimbal_task.c **** extern uint16_t fric_pwm1,fric_pwm2;
  36:application/src/gimbal_task.c **** void fric_control_loop(void)
  37:application/src/gimbal_task.c **** {
  30              		.loc 1 37 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  38:application/src/gimbal_task.c ****   if(fric_pwm1 && fric_pwm2){
  34              		.loc 1 38 3 view .LVU1
  35              		.loc 1 38 6 is_stmt 0 view .LVU2
  36 0000 3B4B     		ldr	r3, .L46
  37 0002 1888     		ldrh	r0, [r3]
  37:application/src/gimbal_task.c ****   if(fric_pwm1 && fric_pwm2){
  38              		.loc 1 37 1 view .LVU3
  39 0004 10B5     		push	{r4, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 4, -8
  42              		.cfi_offset 14, -4
  43              		.loc 1 38 16 view .LVU4
  44 0006 3B4C     		ldr	r4, .L46+4
  45              		.loc 1 38 5 view .LVU5
  46 0008 08B1     		cbz	r0, .L2
  47              		.loc 1 38 16 discriminator 1 view .LVU6
  48 000a 2388     		ldrh	r3, [r4]
  49 000c E3BB     		cbnz	r3, .L43
  50              	.L2:
  39:application/src/gimbal_task.c ****     ramp_calc(&fric1_ramp, SHOOT_FRIC_PWM_ADD_VALUE);
  40:application/src/gimbal_task.c ****     ramp_calc(&fric2_ramp, SHOOT_FRIC_PWM_ADD_VALUE);
  41:application/src/gimbal_task.c ****   }
  42:application/src/gimbal_task.c ****   else{
  43:application/src/gimbal_task.c ****     ramp_calc(&fric1_ramp, -SHOOT_FRIC_PWM_ADD_VALUE);
  51              		.loc 1 43 5 is_stmt 1 view .LVU7
  52              	.LVL0:
  53              	.LBB14:
  54              	.LBI14:
  44:application/src/gimbal_task.c ****     ramp_calc(&fric2_ramp, -SHOOT_FRIC_PWM_ADD_VALUE);
  45:application/src/gimbal_task.c ****   }
  46:application/src/gimbal_task.c ****   //需打开定时器
  47:application/src/gimbal_task.c ****     fric1_on(fric_pwm1);
  48:application/src/gimbal_task.c ****     fric2_on(fric_pwm2);
  49:application/src/gimbal_task.c **** }
  50:application/src/gimbal_task.c **** 
  51:application/src/gimbal_task.c **** void fric_init(void)
  52:application/src/gimbal_task.c **** {
  53:application/src/gimbal_task.c ****     fric_pwm1 = FRIC_OFF;
  54:application/src/gimbal_task.c ****     fric_pwm2 = FRIC_OFF;
  55:application/src/gimbal_task.c ****     ramp_init(&fric1_ramp,FRIC_CONTROL_TIME * 0.001f, FRIC_MAX, FRIC_MIN);
  56:application/src/gimbal_task.c ****     ramp_init(&fric2_ramp,FRIC_CONTROL_TIME * 0.001f, FRIC_MAX, FRIC_MIN);
  57:application/src/gimbal_task.c **** }
  58:application/src/gimbal_task.c **** 
  59:application/src/gimbal_task.c **** bool_t micro_sw;
  60:application/src/gimbal_task.c **** void micro_sw_update(void){
ARM GAS  /tmp/ccygdS7z.s 			page 3


  61:application/src/gimbal_task.c ****   micro_sw = HAL_GPIO_ReadPin(BUTTON_TRIG_GPIO_Port, BUTTON_TRIG_Pin);
  62:application/src/gimbal_task.c **** }
  63:application/src/gimbal_task.c **** 
  64:application/src/gimbal_task.c **** 
  65:application/src/gimbal_task.c **** /** @brief          斜波函数初始化
  66:application/src/gimbal_task.c ****   ********          斜波struct 间隔时间(s) MAX MIN
  67:application/src/gimbal_task.c ****   */
  68:application/src/gimbal_task.c **** void ramp_init(ramp_function_source_t *ramp_source_type, float frame_period, float max, float min)
  69:application/src/gimbal_task.c **** {
  70:application/src/gimbal_task.c ****     ramp_source_type->frame_period = frame_period;
  71:application/src/gimbal_task.c ****     ramp_source_type->max_value = max;
  72:application/src/gimbal_task.c ****     ramp_source_type->min_value = min;
  73:application/src/gimbal_task.c ****     ramp_source_type->input = 0.0f;
  74:application/src/gimbal_task.c ****     ramp_source_type->out = 0.0f;
  75:application/src/gimbal_task.c **** }
  76:application/src/gimbal_task.c **** 
  77:application/src/gimbal_task.c **** 
  78:application/src/gimbal_task.c **** /** @brief          斜波计算,根据input叠加, s 即一秒后增加输入的值
  79:application/src/gimbal_task.c ****   ********          斜波函数结构体 输入值 滤波参数
  80:application/src/gimbal_task.c ****   */
  81:application/src/gimbal_task.c **** void ramp_calc(ramp_function_source_t *ramp_source_type, float input)
  55              		.loc 1 81 6 view .LVU8
  56              	.LBB15:
  82:application/src/gimbal_task.c **** {
  83:application/src/gimbal_task.c ****     ramp_source_type->input = input;
  57              		.loc 1 83 5 view .LVU9
  58              		.loc 1 83 29 is_stmt 0 view .LVU10
  59 000e 3A4B     		ldr	r3, .L46+8
  60 0010 9FED3A7A 		vldr.32	s14, .L46+12
  84:application/src/gimbal_task.c ****     ramp_source_type->out += ramp_source_type->input * ramp_source_type->frame_period;
  61              		.loc 1 84 27 view .LVU11
  62 0014 D3ED017A 		vldr.32	s15, [r3, #4]
  63 0018 93ED036A 		vldr.32	s12, [r3, #12]
  85:application/src/gimbal_task.c ****     if (ramp_source_type->out > ramp_source_type->max_value)
  64              		.loc 1 85 49 view .LVU12
  65 001c D3ED046A 		vldr.32	s13, [r3, #16]
  83:application/src/gimbal_task.c ****     ramp_source_type->out += ramp_source_type->input * ramp_source_type->frame_period;
  66              		.loc 1 83 29 view .LVU13
  67 0020 83ED007A 		vstr.32	s14, [r3]
  84:application/src/gimbal_task.c ****     ramp_source_type->out += ramp_source_type->input * ramp_source_type->frame_period;
  68              		.loc 1 84 5 is_stmt 1 view .LVU14
  84:application/src/gimbal_task.c ****     ramp_source_type->out += ramp_source_type->input * ramp_source_type->frame_period;
  69              		.loc 1 84 27 is_stmt 0 view .LVU15
  70 0024 E6EE077A 		vfma.f32	s15, s12, s14
  71              		.loc 1 85 8 view .LVU16
  72 0028 F4EEE67A 		vcmpe.f32	s15, s13
  73 002c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  84:application/src/gimbal_task.c ****     ramp_source_type->out += ramp_source_type->input * ramp_source_type->frame_period;
  74              		.loc 1 84 27 view .LVU17
  75 0030 C3ED017A 		vstr.32	s15, [r3, #4]
  76              		.loc 1 85 5 is_stmt 1 view .LVU18
  77              		.loc 1 85 8 is_stmt 0 view .LVU19
  78 0034 25DC     		bgt	.L44
  86:application/src/gimbal_task.c ****     {
  87:application/src/gimbal_task.c ****         ramp_source_type->out = ramp_source_type->max_value;
  88:application/src/gimbal_task.c ****     }
  89:application/src/gimbal_task.c ****     else if (ramp_source_type->out < ramp_source_type->min_value)
ARM GAS  /tmp/ccygdS7z.s 			page 4


  79              		.loc 1 89 10 is_stmt 1 view .LVU20
  80              		.loc 1 89 54 is_stmt 0 view .LVU21
  81 0036 93ED027A 		vldr.32	s14, [r3, #8]
  82              		.loc 1 89 13 view .LVU22
  83 003a F4EEC77A 		vcmpe.f32	s15, s14
  84 003e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  90:application/src/gimbal_task.c ****     {
  91:application/src/gimbal_task.c ****         ramp_source_type->out = ramp_source_type->min_value;
  85              		.loc 1 91 9 is_stmt 1 view .LVU23
  86              		.loc 1 91 31 is_stmt 0 view .LVU24
  87 0042 48BF     		it	mi
  88 0044 83ED017A 		vstrmi.32	s14, [r3, #4]
  89              	.L13:
  90              	.LVL1:
  91              		.loc 1 91 31 view .LVU25
  92              	.LBE15:
  93              	.LBE14:
  44:application/src/gimbal_task.c ****   }
  94              		.loc 1 44 5 is_stmt 1 view .LVU26
  95              	.LBB17:
  96              	.LBI17:
  81:application/src/gimbal_task.c **** {
  97              		.loc 1 81 6 view .LVU27
  98              	.LBB18:
  83:application/src/gimbal_task.c ****     ramp_source_type->out += ramp_source_type->input * ramp_source_type->frame_period;
  99              		.loc 1 83 5 view .LVU28
  83:application/src/gimbal_task.c ****     ramp_source_type->out += ramp_source_type->input * ramp_source_type->frame_period;
 100              		.loc 1 83 29 is_stmt 0 view .LVU29
 101 0048 2D4B     		ldr	r3, .L46+16
 102 004a 9FED2C7A 		vldr.32	s14, .L46+12
 103              	.LVL2:
 104              	.L41:
  84:application/src/gimbal_task.c ****     if (ramp_source_type->out > ramp_source_type->max_value)
 105              		.loc 1 84 27 view .LVU30
 106 004e D3ED017A 		vldr.32	s15, [r3, #4]
 107 0052 93ED036A 		vldr.32	s12, [r3, #12]
  85:application/src/gimbal_task.c ****     {
 108              		.loc 1 85 49 view .LVU31
 109 0056 D3ED046A 		vldr.32	s13, [r3, #16]
  83:application/src/gimbal_task.c ****     ramp_source_type->out += ramp_source_type->input * ramp_source_type->frame_period;
 110              		.loc 1 83 29 view .LVU32
 111 005a 83ED007A 		vstr.32	s14, [r3]
  84:application/src/gimbal_task.c ****     if (ramp_source_type->out > ramp_source_type->max_value)
 112              		.loc 1 84 5 is_stmt 1 view .LVU33
  84:application/src/gimbal_task.c ****     if (ramp_source_type->out > ramp_source_type->max_value)
 113              		.loc 1 84 27 is_stmt 0 view .LVU34
 114 005e E6EE077A 		vfma.f32	s15, s12, s14
  85:application/src/gimbal_task.c ****     {
 115              		.loc 1 85 8 view .LVU35
 116 0062 F4EEE67A 		vcmpe.f32	s15, s13
 117 0066 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  84:application/src/gimbal_task.c ****     if (ramp_source_type->out > ramp_source_type->max_value)
 118              		.loc 1 84 27 view .LVU36
 119 006a C3ED017A 		vstr.32	s15, [r3, #4]
  85:application/src/gimbal_task.c ****     {
 120              		.loc 1 85 5 is_stmt 1 view .LVU37
  85:application/src/gimbal_task.c ****     {
ARM GAS  /tmp/ccygdS7z.s 			page 5


 121              		.loc 1 85 8 is_stmt 0 view .LVU38
 122 006e 2CDD     		ble	.L35
  87:application/src/gimbal_task.c ****     }
 123              		.loc 1 87 9 is_stmt 1 view .LVU39
 124              	.LBE18:
 125              	.LBE17:
  47:application/src/gimbal_task.c ****     fric2_on(fric_pwm2);
 126              		.loc 1 47 5 view .LVU40
 127              	.LBB21:
 128              	.LBB19:
  87:application/src/gimbal_task.c ****     }
 129              		.loc 1 87 31 is_stmt 0 view .LVU41
 130 0070 C3ED016A 		vstr.32	s13, [r3, #4]
 131              	.LBE19:
 132              	.LBE21:
  47:application/src/gimbal_task.c ****     fric2_on(fric_pwm2);
 133              		.loc 1 47 5 view .LVU42
 134 0074 FFF7FEFF 		bl	fric1_on
 135              	.LVL3:
  48:application/src/gimbal_task.c **** }
 136              		.loc 1 48 5 is_stmt 1 view .LVU43
 137 0078 2088     		ldrh	r0, [r4]
  49:application/src/gimbal_task.c **** 
 138              		.loc 1 49 1 is_stmt 0 view .LVU44
 139 007a BDE81040 		pop	{r4, lr}
 140              		.cfi_remember_state
 141              		.cfi_restore 14
 142              		.cfi_restore 4
 143              		.cfi_def_cfa_offset 0
  48:application/src/gimbal_task.c **** }
 144              		.loc 1 48 5 view .LVU45
 145 007e FFF7FEBF 		b	fric2_on
 146              	.LVL4:
 147              	.L44:
 148              		.cfi_restore_state
 149              	.LBB22:
 150              	.LBB16:
  87:application/src/gimbal_task.c ****     }
 151              		.loc 1 87 9 is_stmt 1 view .LVU46
  87:application/src/gimbal_task.c ****     }
 152              		.loc 1 87 31 is_stmt 0 view .LVU47
 153 0082 C3ED016A 		vstr.32	s13, [r3, #4]
 154 0086 DFE7     		b	.L13
 155              	.LVL5:
 156              	.L43:
  87:application/src/gimbal_task.c ****     }
 157              		.loc 1 87 31 view .LVU48
 158              	.LBE16:
 159              	.LBE22:
  39:application/src/gimbal_task.c ****     ramp_calc(&fric2_ramp, SHOOT_FRIC_PWM_ADD_VALUE);
 160              		.loc 1 39 5 is_stmt 1 view .LVU49
 161              	.LBB23:
 162              	.LBI23:
  81:application/src/gimbal_task.c **** {
 163              		.loc 1 81 6 view .LVU50
 164              	.LBB24:
  83:application/src/gimbal_task.c ****     ramp_source_type->out += ramp_source_type->input * ramp_source_type->frame_period;
ARM GAS  /tmp/ccygdS7z.s 			page 6


 165              		.loc 1 83 5 view .LVU51
  83:application/src/gimbal_task.c ****     ramp_source_type->out += ramp_source_type->input * ramp_source_type->frame_period;
 166              		.loc 1 83 29 is_stmt 0 view .LVU52
 167 0088 1B4B     		ldr	r3, .L46+8
 168 008a 9FED1E7A 		vldr.32	s14, .L46+20
  84:application/src/gimbal_task.c ****     if (ramp_source_type->out > ramp_source_type->max_value)
 169              		.loc 1 84 27 view .LVU53
 170 008e D3ED017A 		vldr.32	s15, [r3, #4]
 171 0092 93ED036A 		vldr.32	s12, [r3, #12]
  85:application/src/gimbal_task.c ****     {
 172              		.loc 1 85 49 view .LVU54
 173 0096 D3ED046A 		vldr.32	s13, [r3, #16]
  83:application/src/gimbal_task.c ****     ramp_source_type->out += ramp_source_type->input * ramp_source_type->frame_period;
 174              		.loc 1 83 29 view .LVU55
 175 009a 83ED007A 		vstr.32	s14, [r3]
  84:application/src/gimbal_task.c ****     if (ramp_source_type->out > ramp_source_type->max_value)
 176              		.loc 1 84 5 is_stmt 1 view .LVU56
  84:application/src/gimbal_task.c ****     if (ramp_source_type->out > ramp_source_type->max_value)
 177              		.loc 1 84 27 is_stmt 0 view .LVU57
 178 009e E6EE077A 		vfma.f32	s15, s12, s14
  85:application/src/gimbal_task.c ****     {
 179              		.loc 1 85 8 view .LVU58
 180 00a2 F4EEE67A 		vcmpe.f32	s15, s13
 181 00a6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  84:application/src/gimbal_task.c ****     if (ramp_source_type->out > ramp_source_type->max_value)
 182              		.loc 1 84 27 view .LVU59
 183 00aa C3ED017A 		vstr.32	s15, [r3, #4]
  85:application/src/gimbal_task.c ****     {
 184              		.loc 1 85 5 is_stmt 1 view .LVU60
  85:application/src/gimbal_task.c ****     {
 185              		.loc 1 85 8 is_stmt 0 view .LVU61
 186 00ae 1CDC     		bgt	.L45
  89:application/src/gimbal_task.c ****     {
 187              		.loc 1 89 10 is_stmt 1 view .LVU62
  89:application/src/gimbal_task.c ****     {
 188              		.loc 1 89 54 is_stmt 0 view .LVU63
 189 00b0 93ED027A 		vldr.32	s14, [r3, #8]
  89:application/src/gimbal_task.c ****     {
 190              		.loc 1 89 13 view .LVU64
 191 00b4 F4EEC77A 		vcmpe.f32	s15, s14
 192 00b8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 193              		.loc 1 91 9 is_stmt 1 view .LVU65
 194              		.loc 1 91 31 is_stmt 0 view .LVU66
 195 00bc 48BF     		it	mi
 196 00be 83ED017A 		vstrmi.32	s14, [r3, #4]
 197              	.L5:
 198              	.LVL6:
 199              		.loc 1 91 31 view .LVU67
 200              	.LBE24:
 201              	.LBE23:
  40:application/src/gimbal_task.c ****   }
 202              		.loc 1 40 5 is_stmt 1 view .LVU68
 203              	.LBB26:
 204              	.LBI26:
  81:application/src/gimbal_task.c **** {
 205              		.loc 1 81 6 view .LVU69
 206              	.LBB27:
ARM GAS  /tmp/ccygdS7z.s 			page 7


  83:application/src/gimbal_task.c ****     ramp_source_type->out += ramp_source_type->input * ramp_source_type->frame_period;
 207              		.loc 1 83 5 view .LVU70
  83:application/src/gimbal_task.c ****     ramp_source_type->out += ramp_source_type->input * ramp_source_type->frame_period;
 208              		.loc 1 83 29 is_stmt 0 view .LVU71
 209 00c2 0F4B     		ldr	r3, .L46+16
 210 00c4 9FED0F7A 		vldr.32	s14, .L46+20
 211 00c8 C1E7     		b	.L41
 212              	.LVL7:
 213              	.L35:
  83:application/src/gimbal_task.c ****     ramp_source_type->out += ramp_source_type->input * ramp_source_type->frame_period;
 214              		.loc 1 83 29 view .LVU72
 215              	.LBE27:
 216              	.LBE26:
 217              	.LBB28:
 218              	.LBB20:
  89:application/src/gimbal_task.c ****     {
 219              		.loc 1 89 10 is_stmt 1 view .LVU73
  89:application/src/gimbal_task.c ****     {
 220              		.loc 1 89 54 is_stmt 0 view .LVU74
 221 00ca 93ED027A 		vldr.32	s14, [r3, #8]
  89:application/src/gimbal_task.c ****     {
 222              		.loc 1 89 13 view .LVU75
 223 00ce F4EEC77A 		vcmpe.f32	s15, s14
 224 00d2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 225              		.loc 1 91 9 is_stmt 1 view .LVU76
 226              		.loc 1 91 31 is_stmt 0 view .LVU77
 227 00d6 48BF     		it	mi
 228 00d8 83ED017A 		vstrmi.32	s14, [r3, #4]
 229              	.LBE20:
 230              	.LBE28:
  47:application/src/gimbal_task.c ****     fric2_on(fric_pwm2);
 231              		.loc 1 47 5 is_stmt 1 view .LVU78
 232 00dc FFF7FEFF 		bl	fric1_on
 233              	.LVL8:
  48:application/src/gimbal_task.c **** }
 234              		.loc 1 48 5 view .LVU79
 235 00e0 2088     		ldrh	r0, [r4]
  49:application/src/gimbal_task.c **** 
 236              		.loc 1 49 1 is_stmt 0 view .LVU80
 237 00e2 BDE81040 		pop	{r4, lr}
 238              		.cfi_remember_state
 239              		.cfi_restore 14
 240              		.cfi_restore 4
 241              		.cfi_def_cfa_offset 0
  48:application/src/gimbal_task.c **** }
 242              		.loc 1 48 5 view .LVU81
 243 00e6 FFF7FEBF 		b	fric2_on
 244              	.LVL9:
 245              	.L45:
 246              		.cfi_restore_state
 247              	.LBB29:
 248              	.LBB25:
  87:application/src/gimbal_task.c ****     }
 249              		.loc 1 87 9 is_stmt 1 view .LVU82
  87:application/src/gimbal_task.c ****     }
 250              		.loc 1 87 31 is_stmt 0 view .LVU83
 251 00ea C3ED016A 		vstr.32	s13, [r3, #4]
ARM GAS  /tmp/ccygdS7z.s 			page 8


 252 00ee E8E7     		b	.L5
 253              	.L47:
 254              		.align	2
 255              	.L46:
 256 00f0 00000000 		.word	fric_pwm1
 257 00f4 00000000 		.word	fric_pwm2
 258 00f8 00000000 		.word	.LANCHOR0
 259 00fc 0000C8C2 		.word	-1027080192
 260 0100 00000000 		.word	.LANCHOR1
 261 0104 0000C842 		.word	1120403456
 262              	.LBE25:
 263              	.LBE29:
 264              		.cfi_endproc
 265              	.LFE241:
 267              		.section	.text.fric_init,"ax",%progbits
 268              		.align	1
 269              		.p2align 2,,3
 270              		.global	fric_init
 271              		.syntax unified
 272              		.thumb
 273              		.thumb_func
 275              	fric_init:
 276              	.LFB242:
  52:application/src/gimbal_task.c ****     fric_pwm1 = FRIC_OFF;
 277              		.loc 1 52 1 is_stmt 1 view -0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281              		@ link register save eliminated.
  53:application/src/gimbal_task.c ****     fric_pwm2 = FRIC_OFF;
 282              		.loc 1 53 5 view .LVU85
 283              	.LBB30:
 284              	.LBB31:
  70:application/src/gimbal_task.c ****     ramp_source_type->max_value = max;
 285              		.loc 1 70 36 is_stmt 0 view .LVU86
 286 0000 0E4A     		ldr	r2, .L50
 287              	.LBE31:
 288              	.LBE30:
 289              	.LBB37:
 290              	.LBB38:
 291 0002 0F4B     		ldr	r3, .L50+4
 292              	.LBE38:
 293              	.LBE37:
 294              	.LBB42:
 295              	.LBB32:
 296 0004 DFF84CC0 		ldr	ip, .L50+24
  71:application/src/gimbal_task.c ****     ramp_source_type->min_value = min;
 297              		.loc 1 71 33 view .LVU87
 298 0008 0E48     		ldr	r0, .L50+8
  73:application/src/gimbal_task.c ****     ramp_source_type->out = 0.0f;
 299              		.loc 1 73 29 view .LVU88
 300 000a 0021     		movs	r1, #0
 301              	.LBE32:
 302              	.LBE42:
  52:application/src/gimbal_task.c ****     fric_pwm1 = FRIC_OFF;
 303              		.loc 1 52 1 view .LVU89
 304 000c 10B4     		push	{r4}
ARM GAS  /tmp/ccygdS7z.s 			page 9


 305              		.cfi_def_cfa_offset 4
 306              		.cfi_offset 4, -4
 307              	.LBB43:
 308              	.LBB33:
  73:application/src/gimbal_task.c ****     ramp_source_type->out = 0.0f;
 309              		.loc 1 73 29 view .LVU90
 310 000e 1160     		str	r1, [r2]	@ float
  74:application/src/gimbal_task.c **** }
 311              		.loc 1 74 27 view .LVU91
 312 0010 5160     		str	r1, [r2, #4]	@ float
 313              	.LBE33:
 314              	.LBE43:
 315              	.LBB44:
 316              	.LBB39:
  73:application/src/gimbal_task.c ****     ramp_source_type->out = 0.0f;
 317              		.loc 1 73 29 view .LVU92
 318 0012 1960     		str	r1, [r3]	@ float
  74:application/src/gimbal_task.c **** }
 319              		.loc 1 74 27 view .LVU93
 320 0014 5960     		str	r1, [r3, #4]	@ float
 321              	.LBE39:
 322              	.LBE44:
 323              	.LBB45:
 324              	.LBB34:
  72:application/src/gimbal_task.c ****     ramp_source_type->input = 0.0f;
 325              		.loc 1 72 33 view .LVU94
 326 0016 0C49     		ldr	r1, .L50+12
 327              	.LBE34:
 328              	.LBE45:
  53:application/src/gimbal_task.c ****     fric_pwm2 = FRIC_OFF;
 329              		.loc 1 53 15 view .LVU95
 330 0018 0C4C     		ldr	r4, .L50+16
 331              	.LBB46:
 332              	.LBB35:
  70:application/src/gimbal_task.c ****     ramp_source_type->max_value = max;
 333              		.loc 1 70 36 view .LVU96
 334 001a C2F80CC0 		str	ip, [r2, #12]	@ float
  71:application/src/gimbal_task.c ****     ramp_source_type->min_value = min;
 335              		.loc 1 71 33 view .LVU97
 336 001e 1061     		str	r0, [r2, #16]	@ float
  72:application/src/gimbal_task.c ****     ramp_source_type->input = 0.0f;
 337              		.loc 1 72 33 view .LVU98
 338 0020 9160     		str	r1, [r2, #8]	@ float
 339              	.LBE35:
 340              	.LBE46:
  54:application/src/gimbal_task.c ****     ramp_init(&fric1_ramp,FRIC_CONTROL_TIME * 0.001f, FRIC_MAX, FRIC_MIN);
 341              		.loc 1 54 15 view .LVU99
 342 0022 0B4A     		ldr	r2, .L50+20
 343              	.LBB47:
 344              	.LBB40:
  70:application/src/gimbal_task.c ****     ramp_source_type->max_value = max;
 345              		.loc 1 70 36 view .LVU100
 346 0024 C3F80CC0 		str	ip, [r3, #12]	@ float
  71:application/src/gimbal_task.c ****     ramp_source_type->min_value = min;
 347              		.loc 1 71 33 view .LVU101
 348 0028 1861     		str	r0, [r3, #16]	@ float
  72:application/src/gimbal_task.c ****     ramp_source_type->input = 0.0f;
ARM GAS  /tmp/ccygdS7z.s 			page 10


 349              		.loc 1 72 33 view .LVU102
 350 002a 9960     		str	r1, [r3, #8]	@ float
 351              	.LBE40:
 352              	.LBE47:
  53:application/src/gimbal_task.c ****     fric_pwm2 = FRIC_OFF;
 353              		.loc 1 53 15 view .LVU103
 354 002c 4FF47A73 		mov	r3, #1000
 355 0030 2380     		strh	r3, [r4]	@ movhi
  54:application/src/gimbal_task.c ****     ramp_init(&fric1_ramp,FRIC_CONTROL_TIME * 0.001f, FRIC_MAX, FRIC_MIN);
 356              		.loc 1 54 5 is_stmt 1 view .LVU104
  54:application/src/gimbal_task.c ****     ramp_init(&fric1_ramp,FRIC_CONTROL_TIME * 0.001f, FRIC_MAX, FRIC_MIN);
 357              		.loc 1 54 15 is_stmt 0 view .LVU105
 358 0032 1380     		strh	r3, [r2]	@ movhi
  55:application/src/gimbal_task.c ****     ramp_init(&fric2_ramp,FRIC_CONTROL_TIME * 0.001f, FRIC_MAX, FRIC_MIN);
 359              		.loc 1 55 5 is_stmt 1 view .LVU106
 360              	.LVL10:
 361              	.LBB48:
 362              	.LBI30:
  68:application/src/gimbal_task.c **** {
 363              		.loc 1 68 6 view .LVU107
 364              	.LBB36:
  70:application/src/gimbal_task.c ****     ramp_source_type->max_value = max;
 365              		.loc 1 70 5 view .LVU108
  71:application/src/gimbal_task.c ****     ramp_source_type->min_value = min;
 366              		.loc 1 71 5 view .LVU109
  72:application/src/gimbal_task.c ****     ramp_source_type->input = 0.0f;
 367              		.loc 1 72 5 view .LVU110
  73:application/src/gimbal_task.c ****     ramp_source_type->out = 0.0f;
 368              		.loc 1 73 5 view .LVU111
  74:application/src/gimbal_task.c **** }
 369              		.loc 1 74 5 view .LVU112
  74:application/src/gimbal_task.c **** }
 370              		.loc 1 74 5 is_stmt 0 view .LVU113
 371              	.LBE36:
 372              	.LBE48:
  56:application/src/gimbal_task.c **** }
 373              		.loc 1 56 5 is_stmt 1 view .LVU114
 374              	.LBB49:
 375              	.LBI37:
  68:application/src/gimbal_task.c **** {
 376              		.loc 1 68 6 view .LVU115
 377              	.LBB41:
  70:application/src/gimbal_task.c ****     ramp_source_type->max_value = max;
 378              		.loc 1 70 5 view .LVU116
  71:application/src/gimbal_task.c ****     ramp_source_type->min_value = min;
 379              		.loc 1 71 5 view .LVU117
  72:application/src/gimbal_task.c ****     ramp_source_type->input = 0.0f;
 380              		.loc 1 72 5 view .LVU118
  73:application/src/gimbal_task.c ****     ramp_source_type->out = 0.0f;
 381              		.loc 1 73 5 view .LVU119
  74:application/src/gimbal_task.c **** }
 382              		.loc 1 74 5 view .LVU120
  74:application/src/gimbal_task.c **** }
 383              		.loc 1 74 5 is_stmt 0 view .LVU121
 384              	.LBE41:
 385              	.LBE49:
  57:application/src/gimbal_task.c **** 
ARM GAS  /tmp/ccygdS7z.s 			page 11


 386              		.loc 1 57 1 view .LVU122
 387 0034 5DF8044B 		ldr	r4, [sp], #4
 388              		.cfi_restore 4
 389              		.cfi_def_cfa_offset 0
 390 0038 7047     		bx	lr
 391              	.L51:
 392 003a 00BF     		.align	2
 393              	.L50:
 394 003c 00000000 		.word	.LANCHOR0
 395 0040 00000000 		.word	.LANCHOR1
 396 0044 0080A244 		.word	1151500288
 397 0048 00007A44 		.word	1148846080
 398 004c 00000000 		.word	fric_pwm1
 399 0050 00000000 		.word	fric_pwm2
 400 0054 6F12833A 		.word	981668463
 401              		.cfi_endproc
 402              	.LFE242:
 404              		.section	.text.gimbal_task,"ax",%progbits
 405              		.align	1
 406              		.p2align 2,,3
 407              		.global	gimbal_task
 408              		.syntax unified
 409              		.thumb
 410              		.thumb_func
 412              	gimbal_task:
 413              	.LVL11:
 414              	.LFB240:
  15:application/src/gimbal_task.c ****   vTaskDelay(GIMBAL_TASK_INIT_TIME);
 415              		.loc 1 15 1 is_stmt 1 view -0
 416              		.cfi_startproc
 417              		@ Volatile: function does not return.
 418              		@ args = 0, pretend = 0, frame = 0
 419              		@ frame_needed = 0, uses_anonymous_args = 0
  16:application/src/gimbal_task.c ****   fric_init();
 420              		.loc 1 16 3 view .LVU124
  15:application/src/gimbal_task.c ****   vTaskDelay(GIMBAL_TASK_INIT_TIME);
 421              		.loc 1 15 1 is_stmt 0 view .LVU125
 422 0000 08B5     		push	{r3, lr}
 423              		.cfi_def_cfa_offset 8
 424              		.cfi_offset 3, -8
 425              		.cfi_offset 14, -4
  16:application/src/gimbal_task.c ****   fric_init();
 426              		.loc 1 16 3 view .LVU126
 427 0002 C920     		movs	r0, #201
 428              	.LVL12:
  16:application/src/gimbal_task.c ****   fric_init();
 429              		.loc 1 16 3 view .LVU127
 430 0004 FFF7FEFF 		bl	vTaskDelay
 431              	.LVL13:
  17:application/src/gimbal_task.c ****   while (1)
 432              		.loc 1 17 3 is_stmt 1 view .LVU128
 433 0008 FFF7FEFF 		bl	fric_init
 434              	.LVL14:
 435 000c 094E     		ldr	r6, .L55
 436 000e 0A4D     		ldr	r5, .L55+4
 437              	.LBB52:
 438              	.LBB53:
ARM GAS  /tmp/ccygdS7z.s 			page 12


  61:application/src/gimbal_task.c **** }
 439              		.loc 1 61 14 is_stmt 0 view .LVU129
 440 0010 0A4C     		ldr	r4, .L55+8
 441              	.L53:
 442              	.LBE53:
 443              	.LBE52:
  18:application/src/gimbal_task.c ****   {
 444              		.loc 1 18 3 is_stmt 1 discriminator 1 view .LVU130
  20:application/src/gimbal_task.c ****     micro_sw_update();
 445              		.loc 1 20 5 discriminator 1 view .LVU131
 446 0012 FFF7FEFF 		bl	fric_control_loop
 447              	.LVL15:
  21:application/src/gimbal_task.c **** 
 448              		.loc 1 21 5 discriminator 1 view .LVU132
 449              	.LBB56:
 450              	.LBI52:
  60:application/src/gimbal_task.c ****   micro_sw = HAL_GPIO_ReadPin(BUTTON_TRIG_GPIO_Port, BUTTON_TRIG_Pin);
 451              		.loc 1 60 6 discriminator 1 view .LVU133
 452              	.LBB54:
  61:application/src/gimbal_task.c **** }
 453              		.loc 1 61 3 discriminator 1 view .LVU134
  61:application/src/gimbal_task.c **** }
 454              		.loc 1 61 14 is_stmt 0 discriminator 1 view .LVU135
 455 0016 8021     		movs	r1, #128
 456 0018 2046     		mov	r0, r4
 457 001a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 458              	.LVL16:
 459 001e 0346     		mov	r3, r0
 460              	.LBE54:
 461              	.LBE56:
  27:application/src/gimbal_task.c **** 
 462              		.loc 1 27 5 discriminator 1 view .LVU136
 463 0020 0120     		movs	r0, #1
 464              	.LBB57:
 465              	.LBB55:
  61:application/src/gimbal_task.c **** }
 466              		.loc 1 61 12 discriminator 1 view .LVU137
 467 0022 3370     		strb	r3, [r6]
 468              	.LBE55:
 469              	.LBE57:
  27:application/src/gimbal_task.c **** 
 470              		.loc 1 27 5 is_stmt 1 discriminator 1 view .LVU138
 471 0024 FFF7FEFF 		bl	vTaskDelay
 472              	.LVL17:
  30:application/src/gimbal_task.c **** #endif
 473              		.loc 1 30 5 discriminator 1 view .LVU139
  30:application/src/gimbal_task.c **** #endif
 474              		.loc 1 30 25 is_stmt 0 discriminator 1 view .LVU140
 475 0028 0020     		movs	r0, #0
 476 002a FFF7FEFF 		bl	uxTaskGetStackHighWaterMark
 477              	.LVL18:
  30:application/src/gimbal_task.c **** #endif
 478              		.loc 1 30 23 discriminator 1 view .LVU141
 479 002e 2860     		str	r0, [r5]
  18:application/src/gimbal_task.c ****   {
 480              		.loc 1 18 9 is_stmt 1 discriminator 1 view .LVU142
 481 0030 EFE7     		b	.L53
ARM GAS  /tmp/ccygdS7z.s 			page 13


 482              	.L56:
 483 0032 00BF     		.align	2
 484              	.L55:
 485 0034 00000000 		.word	.LANCHOR2
 486 0038 00000000 		.word	.LANCHOR3
 487 003c 00200240 		.word	1073881088
 488              		.cfi_endproc
 489              	.LFE240:
 491              		.section	.text.micro_sw_update,"ax",%progbits
 492              		.align	1
 493              		.p2align 2,,3
 494              		.global	micro_sw_update
 495              		.syntax unified
 496              		.thumb
 497              		.thumb_func
 499              	micro_sw_update:
 500              	.LFB243:
  60:application/src/gimbal_task.c ****   micro_sw = HAL_GPIO_ReadPin(BUTTON_TRIG_GPIO_Port, BUTTON_TRIG_Pin);
 501              		.loc 1 60 27 view -0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 0
 504              		@ frame_needed = 0, uses_anonymous_args = 0
  61:application/src/gimbal_task.c **** }
 505              		.loc 1 61 3 view .LVU144
  60:application/src/gimbal_task.c ****   micro_sw = HAL_GPIO_ReadPin(BUTTON_TRIG_GPIO_Port, BUTTON_TRIG_Pin);
 506              		.loc 1 60 27 is_stmt 0 view .LVU145
 507 0000 08B5     		push	{r3, lr}
 508              		.cfi_def_cfa_offset 8
 509              		.cfi_offset 3, -8
 510              		.cfi_offset 14, -4
  61:application/src/gimbal_task.c **** }
 511              		.loc 1 61 14 view .LVU146
 512 0002 0348     		ldr	r0, .L59
 513 0004 8021     		movs	r1, #128
 514 0006 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 515              	.LVL19:
  61:application/src/gimbal_task.c **** }
 516              		.loc 1 61 12 view .LVU147
 517 000a 024B     		ldr	r3, .L59+4
 518 000c 1870     		strb	r0, [r3]
  62:application/src/gimbal_task.c **** 
 519              		.loc 1 62 1 view .LVU148
 520 000e 08BD     		pop	{r3, pc}
 521              	.L60:
 522              		.align	2
 523              	.L59:
 524 0010 00200240 		.word	1073881088
 525 0014 00000000 		.word	.LANCHOR2
 526              		.cfi_endproc
 527              	.LFE243:
 529              		.section	.text.ramp_init,"ax",%progbits
 530              		.align	1
 531              		.p2align 2,,3
 532              		.global	ramp_init
 533              		.syntax unified
 534              		.thumb
 535              		.thumb_func
ARM GAS  /tmp/ccygdS7z.s 			page 14


 537              	ramp_init:
 538              	.LVL20:
 539              	.LFB244:
  69:application/src/gimbal_task.c ****     ramp_source_type->frame_period = frame_period;
 540              		.loc 1 69 1 is_stmt 1 view -0
 541              		.cfi_startproc
 542              		@ args = 0, pretend = 0, frame = 0
 543              		@ frame_needed = 0, uses_anonymous_args = 0
 544              		@ link register save eliminated.
  70:application/src/gimbal_task.c ****     ramp_source_type->max_value = max;
 545              		.loc 1 70 5 view .LVU150
  73:application/src/gimbal_task.c ****     ramp_source_type->out = 0.0f;
 546              		.loc 1 73 29 is_stmt 0 view .LVU151
 547 0000 0023     		movs	r3, #0
  70:application/src/gimbal_task.c ****     ramp_source_type->max_value = max;
 548              		.loc 1 70 36 view .LVU152
 549 0002 80ED030A 		vstr.32	s0, [r0, #12]
  71:application/src/gimbal_task.c ****     ramp_source_type->min_value = min;
 550              		.loc 1 71 5 is_stmt 1 view .LVU153
  71:application/src/gimbal_task.c ****     ramp_source_type->min_value = min;
 551              		.loc 1 71 33 is_stmt 0 view .LVU154
 552 0006 C0ED040A 		vstr.32	s1, [r0, #16]
  72:application/src/gimbal_task.c ****     ramp_source_type->input = 0.0f;
 553              		.loc 1 72 5 is_stmt 1 view .LVU155
  72:application/src/gimbal_task.c ****     ramp_source_type->input = 0.0f;
 554              		.loc 1 72 33 is_stmt 0 view .LVU156
 555 000a 80ED021A 		vstr.32	s2, [r0, #8]
  73:application/src/gimbal_task.c ****     ramp_source_type->out = 0.0f;
 556              		.loc 1 73 5 is_stmt 1 view .LVU157
  73:application/src/gimbal_task.c ****     ramp_source_type->out = 0.0f;
 557              		.loc 1 73 29 is_stmt 0 view .LVU158
 558 000e 0360     		str	r3, [r0]	@ float
  74:application/src/gimbal_task.c **** }
 559              		.loc 1 74 5 is_stmt 1 view .LVU159
  74:application/src/gimbal_task.c **** }
 560              		.loc 1 74 27 is_stmt 0 view .LVU160
 561 0010 4360     		str	r3, [r0, #4]	@ float
  75:application/src/gimbal_task.c **** 
 562              		.loc 1 75 1 view .LVU161
 563 0012 7047     		bx	lr
 564              		.cfi_endproc
 565              	.LFE244:
 567              		.section	.text.ramp_calc,"ax",%progbits
 568              		.align	1
 569              		.p2align 2,,3
 570              		.global	ramp_calc
 571              		.syntax unified
 572              		.thumb
 573              		.thumb_func
 575              	ramp_calc:
 576              	.LVL21:
 577              	.LFB245:
  82:application/src/gimbal_task.c ****     ramp_source_type->input = input;
 578              		.loc 1 82 1 is_stmt 1 view -0
 579              		.cfi_startproc
 580              		@ args = 0, pretend = 0, frame = 0
 581              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccygdS7z.s 			page 15


 582              		@ link register save eliminated.
  83:application/src/gimbal_task.c ****     ramp_source_type->out += ramp_source_type->input * ramp_source_type->frame_period;
 583              		.loc 1 83 5 view .LVU163
  84:application/src/gimbal_task.c ****     if (ramp_source_type->out > ramp_source_type->max_value)
 584              		.loc 1 84 27 is_stmt 0 view .LVU164
 585 0000 D0ED017A 		vldr.32	s15, [r0, #4]
 586 0004 D0ED036A 		vldr.32	s13, [r0, #12]
  85:application/src/gimbal_task.c ****     {
 587              		.loc 1 85 49 view .LVU165
 588 0008 90ED047A 		vldr.32	s14, [r0, #16]
  83:application/src/gimbal_task.c ****     ramp_source_type->out += ramp_source_type->input * ramp_source_type->frame_period;
 589              		.loc 1 83 29 view .LVU166
 590 000c 80ED000A 		vstr.32	s0, [r0]
  84:application/src/gimbal_task.c ****     if (ramp_source_type->out > ramp_source_type->max_value)
 591              		.loc 1 84 5 is_stmt 1 view .LVU167
  84:application/src/gimbal_task.c ****     if (ramp_source_type->out > ramp_source_type->max_value)
 592              		.loc 1 84 27 is_stmt 0 view .LVU168
 593 0010 E6EE807A 		vfma.f32	s15, s13, s0
  85:application/src/gimbal_task.c ****     {
 594              		.loc 1 85 8 view .LVU169
 595 0014 F4EEC77A 		vcmpe.f32	s15, s14
 596 0018 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  84:application/src/gimbal_task.c ****     if (ramp_source_type->out > ramp_source_type->max_value)
 597              		.loc 1 84 27 view .LVU170
 598 001c C0ED017A 		vstr.32	s15, [r0, #4]
  85:application/src/gimbal_task.c ****     {
 599              		.loc 1 85 5 is_stmt 1 view .LVU171
  85:application/src/gimbal_task.c ****     {
 600              		.loc 1 85 8 is_stmt 0 view .LVU172
 601 0020 06DC     		bgt	.L70
  89:application/src/gimbal_task.c ****     {
 602              		.loc 1 89 10 is_stmt 1 view .LVU173
  89:application/src/gimbal_task.c ****     {
 603              		.loc 1 89 54 is_stmt 0 view .LVU174
 604 0022 90ED027A 		vldr.32	s14, [r0, #8]
  89:application/src/gimbal_task.c ****     {
 605              		.loc 1 89 13 view .LVU175
 606 0026 F4EEC77A 		vcmpe.f32	s15, s14
 607 002a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 608 002e 01D5     		bpl	.L62
 609              	.L70:
 610              		.loc 1 91 9 is_stmt 1 view .LVU176
 611              		.loc 1 91 31 is_stmt 0 view .LVU177
 612 0030 80ED017A 		vstr.32	s14, [r0, #4]
 613              	.L62:
  92:application/src/gimbal_task.c ****     }
  93:application/src/gimbal_task.c **** }
 614              		.loc 1 93 1 view .LVU178
 615 0034 7047     		bx	lr
 616              		.cfi_endproc
 617              	.LFE245:
 619              		.global	micro_sw
 620              		.global	fric2_ramp
 621              		.global	fric1_ramp
 622              		.global	gimbal_high_water
 623 0036 00BF     		.section	.bss.fric1_ramp,"aw",%nobits
 624              		.align	2
ARM GAS  /tmp/ccygdS7z.s 			page 16


 625              		.set	.LANCHOR0,. + 0
 628              	fric1_ramp:
 629 0000 00000000 		.space	20
 629      00000000 
 629      00000000 
 629      00000000 
 629      00000000 
 630              		.section	.bss.fric2_ramp,"aw",%nobits
 631              		.align	2
 632              		.set	.LANCHOR1,. + 0
 635              	fric2_ramp:
 636 0000 00000000 		.space	20
 636      00000000 
 636      00000000 
 636      00000000 
 636      00000000 
 637              		.section	.bss.gimbal_high_water,"aw",%nobits
 638              		.align	2
 639              		.set	.LANCHOR3,. + 0
 642              	gimbal_high_water:
 643 0000 00000000 		.space	4
 644              		.section	.bss.micro_sw,"aw",%nobits
 645              		.set	.LANCHOR2,. + 0
 648              	micro_sw:
 649 0000 00       		.space	1
 650              		.text
 651              	.Letext0:
 652              		.file 2 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 653              		.file 3 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 654              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 655              		.file 5 "application/include/struct_typedef.h"
 656              		.file 6 "application/include/gimbal_task.h"
 657              		.file 7 "bsp/boards/Inc/bsp_fric.h"
 658              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 659              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
ARM GAS  /tmp/ccygdS7z.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 gimbal_task.c
     /tmp/ccygdS7z.s:20     .text.fric_control_loop:0000000000000000 $t
     /tmp/ccygdS7z.s:27     .text.fric_control_loop:0000000000000000 fric_control_loop
     /tmp/ccygdS7z.s:256    .text.fric_control_loop:00000000000000f0 $d
     /tmp/ccygdS7z.s:268    .text.fric_init:0000000000000000 $t
     /tmp/ccygdS7z.s:275    .text.fric_init:0000000000000000 fric_init
     /tmp/ccygdS7z.s:394    .text.fric_init:000000000000003c $d
     /tmp/ccygdS7z.s:405    .text.gimbal_task:0000000000000000 $t
     /tmp/ccygdS7z.s:412    .text.gimbal_task:0000000000000000 gimbal_task
     /tmp/ccygdS7z.s:485    .text.gimbal_task:0000000000000034 $d
     /tmp/ccygdS7z.s:492    .text.micro_sw_update:0000000000000000 $t
     /tmp/ccygdS7z.s:499    .text.micro_sw_update:0000000000000000 micro_sw_update
     /tmp/ccygdS7z.s:524    .text.micro_sw_update:0000000000000010 $d
     /tmp/ccygdS7z.s:530    .text.ramp_init:0000000000000000 $t
     /tmp/ccygdS7z.s:537    .text.ramp_init:0000000000000000 ramp_init
     /tmp/ccygdS7z.s:568    .text.ramp_calc:0000000000000000 $t
     /tmp/ccygdS7z.s:575    .text.ramp_calc:0000000000000000 ramp_calc
     /tmp/ccygdS7z.s:648    .bss.micro_sw:0000000000000000 micro_sw
     /tmp/ccygdS7z.s:635    .bss.fric2_ramp:0000000000000000 fric2_ramp
     /tmp/ccygdS7z.s:628    .bss.fric1_ramp:0000000000000000 fric1_ramp
     /tmp/ccygdS7z.s:642    .bss.gimbal_high_water:0000000000000000 gimbal_high_water
     /tmp/ccygdS7z.s:624    .bss.fric1_ramp:0000000000000000 $d
     /tmp/ccygdS7z.s:631    .bss.fric2_ramp:0000000000000000 $d
     /tmp/ccygdS7z.s:638    .bss.gimbal_high_water:0000000000000000 $d
     /tmp/ccygdS7z.s:649    .bss.micro_sw:0000000000000000 $d

UNDEFINED SYMBOLS
fric1_on
fric2_on
fric_pwm1
fric_pwm2
vTaskDelay
HAL_GPIO_ReadPin
uxTaskGetStackHighWaterMark

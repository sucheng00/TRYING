ARM GAS  /tmp/ccDxVoG4.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 2
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.NMI_Handler,"ax",%progbits
  20              		.align	1
  21              		.p2align 2,,3
  22              		.global	NMI_Handler
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	NMI_Handler:
  28              	.LFB235:
  29              		.file 1 "Core/Src/stm32f4xx_it.c"
   1:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_it.c **** /**
   3:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_it.c ****   * @attention
   8:Core/Src/stm32f4xx_it.c ****   *
   9:Core/Src/stm32f4xx_it.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/stm32f4xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32f4xx_it.c ****   *
  12:Core/Src/stm32f4xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f4xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f4xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f4xx_it.c ****   *
  16:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32f4xx_it.c ****   */
  18:Core/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f4xx_it.c **** 
  20:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f4xx_it.c **** #include "main.h"
  22:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  23:Core/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32f4xx_it.c **** 
  27:Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/ccDxVoG4.s 			page 2


  30:Core/Src/stm32f4xx_it.c **** /* USER CODE END TD */
  31:Core/Src/stm32f4xx_it.c **** 
  32:Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32f4xx_it.c **** 
  35:Core/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32f4xx_it.c **** 
  37:Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32f4xx_it.c **** 
  40:Core/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32f4xx_it.c **** 
  42:Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32f4xx_it.c **** 
  45:Core/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32f4xx_it.c **** 
  47:Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32f4xx_it.c **** 
  50:Core/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32f4xx_it.c **** 
  52:Core/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32f4xx_it.c **** 
  55:Core/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32f4xx_it.c **** 
  57:Core/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32f4xx_it.c **** extern PCD_HandleTypeDef hpcd_USB_OTG_FS;
  59:Core/Src/stm32f4xx_it.c **** extern CAN_HandleTypeDef hcan1;
  60:Core/Src/stm32f4xx_it.c **** extern CAN_HandleTypeDef hcan2;
  61:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim1;
  62:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_tx;
  63:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart6_rx;
  64:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart6_tx;
  65:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim9;
  66:Core/Src/stm32f4xx_it.c **** 
  67:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  68:Core/Src/stm32f4xx_it.c **** 
  69:Core/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  70:Core/Src/stm32f4xx_it.c **** 
  71:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  72:Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  73:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  74:Core/Src/stm32f4xx_it.c **** /**
  75:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  76:Core/Src/stm32f4xx_it.c ****   */
  77:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  78:Core/Src/stm32f4xx_it.c **** {
  30              		.loc 1 78 1 view -0
  31              		.cfi_startproc
  32              		@ Volatile: function does not return.
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		@ link register save eliminated.
  36              	.L2:
  79:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
ARM GAS  /tmp/ccDxVoG4.s 			page 3


  80:Core/Src/stm32f4xx_it.c **** 
  81:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  82:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  83:Core/Src/stm32f4xx_it.c ****   while (1)
  37              		.loc 1 83 3 discriminator 1 view .LVU1
  84:Core/Src/stm32f4xx_it.c ****   {
  85:Core/Src/stm32f4xx_it.c ****   }
  38              		.loc 1 85 3 discriminator 1 view .LVU2
  83:Core/Src/stm32f4xx_it.c ****   {
  39              		.loc 1 83 9 discriminator 1 view .LVU3
  40 0000 FEE7     		b	.L2
  41              		.cfi_endproc
  42              	.LFE235:
  44 0002 00BF     		.section	.text.HardFault_Handler,"ax",%progbits
  45              		.align	1
  46              		.p2align 2,,3
  47              		.global	HardFault_Handler
  48              		.syntax unified
  49              		.thumb
  50              		.thumb_func
  52              	HardFault_Handler:
  53              	.LFB236:
  86:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  87:Core/Src/stm32f4xx_it.c **** }
  88:Core/Src/stm32f4xx_it.c **** 
  89:Core/Src/stm32f4xx_it.c **** /**
  90:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  91:Core/Src/stm32f4xx_it.c ****   */
  92:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  93:Core/Src/stm32f4xx_it.c **** {
  54              		.loc 1 93 1 view -0
  55              		.cfi_startproc
  56              		@ Volatile: function does not return.
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.L5:
  94:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  95:Core/Src/stm32f4xx_it.c **** 
  96:Core/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  97:Core/Src/stm32f4xx_it.c ****   while (1)
  61              		.loc 1 97 3 discriminator 1 view .LVU5
  98:Core/Src/stm32f4xx_it.c ****   {
  99:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 100:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 101:Core/Src/stm32f4xx_it.c ****   }
  62              		.loc 1 101 3 discriminator 1 view .LVU6
  97:Core/Src/stm32f4xx_it.c ****   {
  63              		.loc 1 97 9 discriminator 1 view .LVU7
  64 0000 FEE7     		b	.L5
  65              		.cfi_endproc
  66              	.LFE236:
  68 0002 00BF     		.section	.text.MemManage_Handler,"ax",%progbits
  69              		.align	1
  70              		.p2align 2,,3
  71              		.global	MemManage_Handler
  72              		.syntax unified
ARM GAS  /tmp/ccDxVoG4.s 			page 4


  73              		.thumb
  74              		.thumb_func
  76              	MemManage_Handler:
  77              	.LFB237:
 102:Core/Src/stm32f4xx_it.c **** }
 103:Core/Src/stm32f4xx_it.c **** 
 104:Core/Src/stm32f4xx_it.c **** /**
 105:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 106:Core/Src/stm32f4xx_it.c ****   */
 107:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 108:Core/Src/stm32f4xx_it.c **** {
  78              		.loc 1 108 1 view -0
  79              		.cfi_startproc
  80              		@ Volatile: function does not return.
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              	.L7:
 109:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 110:Core/Src/stm32f4xx_it.c **** 
 111:Core/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 112:Core/Src/stm32f4xx_it.c ****   while (1)
  85              		.loc 1 112 3 discriminator 1 view .LVU9
 113:Core/Src/stm32f4xx_it.c ****   {
 114:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 115:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 116:Core/Src/stm32f4xx_it.c ****   }
  86              		.loc 1 116 3 discriminator 1 view .LVU10
 112:Core/Src/stm32f4xx_it.c ****   {
  87              		.loc 1 112 9 discriminator 1 view .LVU11
  88 0000 FEE7     		b	.L7
  89              		.cfi_endproc
  90              	.LFE237:
  92 0002 00BF     		.section	.text.BusFault_Handler,"ax",%progbits
  93              		.align	1
  94              		.p2align 2,,3
  95              		.global	BusFault_Handler
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
 100              	BusFault_Handler:
 101              	.LFB238:
 117:Core/Src/stm32f4xx_it.c **** }
 118:Core/Src/stm32f4xx_it.c **** 
 119:Core/Src/stm32f4xx_it.c **** /**
 120:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 121:Core/Src/stm32f4xx_it.c ****   */
 122:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 123:Core/Src/stm32f4xx_it.c **** {
 102              		.loc 1 123 1 view -0
 103              		.cfi_startproc
 104              		@ Volatile: function does not return.
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107              		@ link register save eliminated.
 108              	.L9:
 124:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
ARM GAS  /tmp/ccDxVoG4.s 			page 5


 125:Core/Src/stm32f4xx_it.c **** 
 126:Core/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 127:Core/Src/stm32f4xx_it.c ****   while (1)
 109              		.loc 1 127 3 discriminator 1 view .LVU13
 128:Core/Src/stm32f4xx_it.c ****   {
 129:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 130:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 131:Core/Src/stm32f4xx_it.c ****   }
 110              		.loc 1 131 3 discriminator 1 view .LVU14
 127:Core/Src/stm32f4xx_it.c ****   {
 111              		.loc 1 127 9 discriminator 1 view .LVU15
 112 0000 FEE7     		b	.L9
 113              		.cfi_endproc
 114              	.LFE238:
 116 0002 00BF     		.section	.text.UsageFault_Handler,"ax",%progbits
 117              		.align	1
 118              		.p2align 2,,3
 119              		.global	UsageFault_Handler
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 124              	UsageFault_Handler:
 125              	.LFB239:
 132:Core/Src/stm32f4xx_it.c **** }
 133:Core/Src/stm32f4xx_it.c **** 
 134:Core/Src/stm32f4xx_it.c **** /**
 135:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 136:Core/Src/stm32f4xx_it.c ****   */
 137:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 138:Core/Src/stm32f4xx_it.c **** {
 126              		.loc 1 138 1 view -0
 127              		.cfi_startproc
 128              		@ Volatile: function does not return.
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 131              		@ link register save eliminated.
 132              	.L11:
 139:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 140:Core/Src/stm32f4xx_it.c **** 
 141:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 142:Core/Src/stm32f4xx_it.c ****   while (1)
 133              		.loc 1 142 3 discriminator 1 view .LVU17
 143:Core/Src/stm32f4xx_it.c ****   {
 144:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 145:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 146:Core/Src/stm32f4xx_it.c ****   }
 134              		.loc 1 146 3 discriminator 1 view .LVU18
 142:Core/Src/stm32f4xx_it.c ****   {
 135              		.loc 1 142 9 discriminator 1 view .LVU19
 136 0000 FEE7     		b	.L11
 137              		.cfi_endproc
 138              	.LFE239:
 140 0002 00BF     		.section	.text.DebugMon_Handler,"ax",%progbits
 141              		.align	1
 142              		.p2align 2,,3
 143              		.global	DebugMon_Handler
 144              		.syntax unified
ARM GAS  /tmp/ccDxVoG4.s 			page 6


 145              		.thumb
 146              		.thumb_func
 148              	DebugMon_Handler:
 149              	.LFB240:
 147:Core/Src/stm32f4xx_it.c **** }
 148:Core/Src/stm32f4xx_it.c **** 
 149:Core/Src/stm32f4xx_it.c **** /**
 150:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 151:Core/Src/stm32f4xx_it.c ****   */
 152:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 153:Core/Src/stm32f4xx_it.c **** {
 150              		.loc 1 153 1 view -0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 154:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 155:Core/Src/stm32f4xx_it.c **** 
 156:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 157:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 158:Core/Src/stm32f4xx_it.c **** 
 159:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 160:Core/Src/stm32f4xx_it.c **** }
 155              		.loc 1 160 1 view .LVU21
 156 0000 7047     		bx	lr
 157              		.cfi_endproc
 158              	.LFE240:
 160 0002 00BF     		.section	.text.EXTI0_IRQHandler,"ax",%progbits
 161              		.align	1
 162              		.p2align 2,,3
 163              		.global	EXTI0_IRQHandler
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 168              	EXTI0_IRQHandler:
 169              	.LFB241:
 161:Core/Src/stm32f4xx_it.c **** 
 162:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 163:Core/Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 164:Core/Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 165:Core/Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 166:Core/Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 167:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 168:Core/Src/stm32f4xx_it.c **** 
 169:Core/Src/stm32f4xx_it.c **** /**
 170:Core/Src/stm32f4xx_it.c ****   * @brief This function handles EXTI line0 interrupt.
 171:Core/Src/stm32f4xx_it.c ****   */
 172:Core/Src/stm32f4xx_it.c **** void EXTI0_IRQHandler(void)
 173:Core/Src/stm32f4xx_it.c **** {
 170              		.loc 1 173 1 view -0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 174:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI0_IRQn 0 */
 175:Core/Src/stm32f4xx_it.c **** 
 176:Core/Src/stm32f4xx_it.c ****   /* USER CODE END EXTI0_IRQn 0 */
ARM GAS  /tmp/ccDxVoG4.s 			page 7


 177:Core/Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(HW0_Pin);
 175              		.loc 1 177 3 view .LVU23
 176 0000 0120     		movs	r0, #1
 177 0002 FFF7FEBF 		b	HAL_GPIO_EXTI_IRQHandler
 178              	.LVL0:
 179              		.cfi_endproc
 180              	.LFE241:
 182 0006 00BF     		.section	.text.EXTI3_IRQHandler,"ax",%progbits
 183              		.align	1
 184              		.p2align 2,,3
 185              		.global	EXTI3_IRQHandler
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 190              	EXTI3_IRQHandler:
 191              	.LFB242:
 178:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI0_IRQn 1 */
 179:Core/Src/stm32f4xx_it.c **** 
 180:Core/Src/stm32f4xx_it.c ****   /* USER CODE END EXTI0_IRQn 1 */
 181:Core/Src/stm32f4xx_it.c **** }
 182:Core/Src/stm32f4xx_it.c **** 
 183:Core/Src/stm32f4xx_it.c **** /**
 184:Core/Src/stm32f4xx_it.c ****   * @brief This function handles EXTI line3 interrupt.
 185:Core/Src/stm32f4xx_it.c ****   */
 186:Core/Src/stm32f4xx_it.c **** void EXTI3_IRQHandler(void)
 187:Core/Src/stm32f4xx_it.c **** {
 192              		.loc 1 187 1 view -0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              		@ link register save eliminated.
 188:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI3_IRQn 0 */
 189:Core/Src/stm32f4xx_it.c **** 
 190:Core/Src/stm32f4xx_it.c ****   /* USER CODE END EXTI3_IRQn 0 */
 191:Core/Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(DRDY_IST8310_Pin);
 197              		.loc 1 191 3 view .LVU25
 198 0000 0820     		movs	r0, #8
 199 0002 FFF7FEBF 		b	HAL_GPIO_EXTI_IRQHandler
 200              	.LVL1:
 201              		.cfi_endproc
 202              	.LFE242:
 204 0006 00BF     		.section	.text.EXTI4_IRQHandler,"ax",%progbits
 205              		.align	1
 206              		.p2align 2,,3
 207              		.global	EXTI4_IRQHandler
 208              		.syntax unified
 209              		.thumb
 210              		.thumb_func
 212              	EXTI4_IRQHandler:
 213              	.LFB243:
 192:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI3_IRQn 1 */
 193:Core/Src/stm32f4xx_it.c **** 
 194:Core/Src/stm32f4xx_it.c ****   /* USER CODE END EXTI3_IRQn 1 */
 195:Core/Src/stm32f4xx_it.c **** }
 196:Core/Src/stm32f4xx_it.c **** 
 197:Core/Src/stm32f4xx_it.c **** /**
 198:Core/Src/stm32f4xx_it.c ****   * @brief This function handles EXTI line4 interrupt.
ARM GAS  /tmp/ccDxVoG4.s 			page 8


 199:Core/Src/stm32f4xx_it.c ****   */
 200:Core/Src/stm32f4xx_it.c **** void EXTI4_IRQHandler(void)
 201:Core/Src/stm32f4xx_it.c **** {
 214              		.loc 1 201 1 view -0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 0
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218              		@ link register save eliminated.
 202:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 0 */
 203:Core/Src/stm32f4xx_it.c **** 
 204:Core/Src/stm32f4xx_it.c ****   /* USER CODE END EXTI4_IRQn 0 */
 205:Core/Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(CS1_ACCEL_Pin);
 219              		.loc 1 205 3 view .LVU27
 220 0000 1020     		movs	r0, #16
 221 0002 FFF7FEBF 		b	HAL_GPIO_EXTI_IRQHandler
 222              	.LVL2:
 223              		.cfi_endproc
 224              	.LFE243:
 226 0006 00BF     		.section	.text.CAN1_RX0_IRQHandler,"ax",%progbits
 227              		.align	1
 228              		.p2align 2,,3
 229              		.global	CAN1_RX0_IRQHandler
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 234              	CAN1_RX0_IRQHandler:
 235              	.LFB244:
 206:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 1 */
 207:Core/Src/stm32f4xx_it.c **** 
 208:Core/Src/stm32f4xx_it.c ****   /* USER CODE END EXTI4_IRQn 1 */
 209:Core/Src/stm32f4xx_it.c **** }
 210:Core/Src/stm32f4xx_it.c **** 
 211:Core/Src/stm32f4xx_it.c **** /**
 212:Core/Src/stm32f4xx_it.c ****   * @brief This function handles CAN1 RX0 interrupts.
 213:Core/Src/stm32f4xx_it.c ****   */
 214:Core/Src/stm32f4xx_it.c **** void CAN1_RX0_IRQHandler(void)
 215:Core/Src/stm32f4xx_it.c **** {
 236              		.loc 1 215 1 view -0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 0
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240              		@ link register save eliminated.
 216:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_RX0_IRQn 0 */
 217:Core/Src/stm32f4xx_it.c **** 
 218:Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_RX0_IRQn 0 */
 219:Core/Src/stm32f4xx_it.c ****   HAL_CAN_IRQHandler(&hcan1);
 241              		.loc 1 219 3 view .LVU29
 242 0000 0148     		ldr	r0, .L17
 243 0002 FFF7FEBF 		b	HAL_CAN_IRQHandler
 244              	.LVL3:
 245              	.L18:
 246 0006 00BF     		.align	2
 247              	.L17:
 248 0008 00000000 		.word	hcan1
 249              		.cfi_endproc
 250              	.LFE244:
 252              		.section	.text.EXTI9_5_IRQHandler,"ax",%progbits
ARM GAS  /tmp/ccDxVoG4.s 			page 9


 253              		.align	1
 254              		.p2align 2,,3
 255              		.global	EXTI9_5_IRQHandler
 256              		.syntax unified
 257              		.thumb
 258              		.thumb_func
 260              	EXTI9_5_IRQHandler:
 261              	.LFB245:
 220:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_RX0_IRQn 1 */
 221:Core/Src/stm32f4xx_it.c **** 
 222:Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_RX0_IRQn 1 */
 223:Core/Src/stm32f4xx_it.c **** }
 224:Core/Src/stm32f4xx_it.c **** 
 225:Core/Src/stm32f4xx_it.c **** /**
 226:Core/Src/stm32f4xx_it.c ****   * @brief This function handles EXTI line[9:5] interrupts.
 227:Core/Src/stm32f4xx_it.c ****   */
 228:Core/Src/stm32f4xx_it.c **** void EXTI9_5_IRQHandler(void)
 229:Core/Src/stm32f4xx_it.c **** {
 262              		.loc 1 229 1 view -0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266              		@ link register save eliminated.
 230:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 0 */
 231:Core/Src/stm32f4xx_it.c **** 
 232:Core/Src/stm32f4xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 0 */
 233:Core/Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(INT1_GYRO_Pin);
 267              		.loc 1 233 3 view .LVU31
 268 0000 2020     		movs	r0, #32
 269 0002 FFF7FEBF 		b	HAL_GPIO_EXTI_IRQHandler
 270              	.LVL4:
 271              		.cfi_endproc
 272              	.LFE245:
 274 0006 00BF     		.section	.text.TIM1_BRK_TIM9_IRQHandler,"ax",%progbits
 275              		.align	1
 276              		.p2align 2,,3
 277              		.global	TIM1_BRK_TIM9_IRQHandler
 278              		.syntax unified
 279              		.thumb
 280              		.thumb_func
 282              	TIM1_BRK_TIM9_IRQHandler:
 283              	.LFB246:
 234:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 1 */
 235:Core/Src/stm32f4xx_it.c **** 
 236:Core/Src/stm32f4xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 1 */
 237:Core/Src/stm32f4xx_it.c **** }
 238:Core/Src/stm32f4xx_it.c **** 
 239:Core/Src/stm32f4xx_it.c **** /**
 240:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM1 break interrupt and TIM9 global interrupt.
 241:Core/Src/stm32f4xx_it.c ****   */
 242:Core/Src/stm32f4xx_it.c **** void TIM1_BRK_TIM9_IRQHandler(void)
 243:Core/Src/stm32f4xx_it.c **** {
 284              		.loc 1 243 1 view -0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 244:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_BRK_TIM9_IRQn 0 */
ARM GAS  /tmp/ccDxVoG4.s 			page 10


 245:Core/Src/stm32f4xx_it.c **** 
 246:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_BRK_TIM9_IRQn 0 */
 247:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 288              		.loc 1 247 3 view .LVU33
 243:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_BRK_TIM9_IRQn 0 */
 289              		.loc 1 243 1 is_stmt 0 view .LVU34
 290 0000 08B5     		push	{r3, lr}
 291              		.cfi_def_cfa_offset 8
 292              		.cfi_offset 3, -8
 293              		.cfi_offset 14, -4
 294              		.loc 1 247 3 view .LVU35
 295 0002 0448     		ldr	r0, .L22
 296 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 297              	.LVL5:
 248:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim9);
 298              		.loc 1 248 3 is_stmt 1 view .LVU36
 249:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_BRK_TIM9_IRQn 1 */
 250:Core/Src/stm32f4xx_it.c **** 
 251:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_BRK_TIM9_IRQn 1 */
 252:Core/Src/stm32f4xx_it.c **** }
 299              		.loc 1 252 1 is_stmt 0 view .LVU37
 300 0008 BDE80840 		pop	{r3, lr}
 301              		.cfi_restore 14
 302              		.cfi_restore 3
 303              		.cfi_def_cfa_offset 0
 248:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim9);
 304              		.loc 1 248 3 view .LVU38
 305 000c 0248     		ldr	r0, .L22+4
 306 000e FFF7FEBF 		b	HAL_TIM_IRQHandler
 307              	.LVL6:
 308              	.L23:
 309 0012 00BF     		.align	2
 310              	.L22:
 311 0014 00000000 		.word	htim1
 312 0018 00000000 		.word	htim9
 313              		.cfi_endproc
 314              	.LFE246:
 316              		.section	.text.DMA2_Stream1_IRQHandler,"ax",%progbits
 317              		.align	1
 318              		.p2align 2,,3
 319              		.global	DMA2_Stream1_IRQHandler
 320              		.syntax unified
 321              		.thumb
 322              		.thumb_func
 324              	DMA2_Stream1_IRQHandler:
 325              	.LFB247:
 253:Core/Src/stm32f4xx_it.c **** 
 254:Core/Src/stm32f4xx_it.c **** /**
 255:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream1 global interrupt.
 256:Core/Src/stm32f4xx_it.c ****   */
 257:Core/Src/stm32f4xx_it.c **** void DMA2_Stream1_IRQHandler(void)
 258:Core/Src/stm32f4xx_it.c **** {
 326              		.loc 1 258 1 is_stmt 1 view -0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 0
 329              		@ frame_needed = 0, uses_anonymous_args = 0
 330              		@ link register save eliminated.
ARM GAS  /tmp/ccDxVoG4.s 			page 11


 259:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream1_IRQn 0 */
 260:Core/Src/stm32f4xx_it.c **** 
 261:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream1_IRQn 0 */
 262:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart6_rx);
 331              		.loc 1 262 3 view .LVU40
 332 0000 0148     		ldr	r0, .L25
 333 0002 FFF7FEBF 		b	HAL_DMA_IRQHandler
 334              	.LVL7:
 335              	.L26:
 336 0006 00BF     		.align	2
 337              	.L25:
 338 0008 00000000 		.word	hdma_usart6_rx
 339              		.cfi_endproc
 340              	.LFE247:
 342              		.section	.text.CAN2_RX0_IRQHandler,"ax",%progbits
 343              		.align	1
 344              		.p2align 2,,3
 345              		.global	CAN2_RX0_IRQHandler
 346              		.syntax unified
 347              		.thumb
 348              		.thumb_func
 350              	CAN2_RX0_IRQHandler:
 351              	.LFB248:
 263:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream1_IRQn 1 */
 264:Core/Src/stm32f4xx_it.c **** 
 265:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream1_IRQn 1 */
 266:Core/Src/stm32f4xx_it.c **** }
 267:Core/Src/stm32f4xx_it.c **** 
 268:Core/Src/stm32f4xx_it.c **** /**
 269:Core/Src/stm32f4xx_it.c ****   * @brief This function handles CAN2 RX0 interrupts.
 270:Core/Src/stm32f4xx_it.c ****   */
 271:Core/Src/stm32f4xx_it.c **** void CAN2_RX0_IRQHandler(void)
 272:Core/Src/stm32f4xx_it.c **** {
 352              		.loc 1 272 1 view -0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 0
 355              		@ frame_needed = 0, uses_anonymous_args = 0
 356              		@ link register save eliminated.
 273:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN2_RX0_IRQn 0 */
 274:Core/Src/stm32f4xx_it.c **** 
 275:Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN2_RX0_IRQn 0 */
 276:Core/Src/stm32f4xx_it.c ****   HAL_CAN_IRQHandler(&hcan2);
 357              		.loc 1 276 3 view .LVU42
 358 0000 0148     		ldr	r0, .L28
 359 0002 FFF7FEBF 		b	HAL_CAN_IRQHandler
 360              	.LVL8:
 361              	.L29:
 362 0006 00BF     		.align	2
 363              	.L28:
 364 0008 00000000 		.word	hcan2
 365              		.cfi_endproc
 366              	.LFE248:
 368              		.section	.text.OTG_FS_IRQHandler,"ax",%progbits
 369              		.align	1
 370              		.p2align 2,,3
 371              		.global	OTG_FS_IRQHandler
 372              		.syntax unified
ARM GAS  /tmp/ccDxVoG4.s 			page 12


 373              		.thumb
 374              		.thumb_func
 376              	OTG_FS_IRQHandler:
 377              	.LFB249:
 277:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN2_RX0_IRQn 1 */
 278:Core/Src/stm32f4xx_it.c **** 
 279:Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN2_RX0_IRQn 1 */
 280:Core/Src/stm32f4xx_it.c **** }
 281:Core/Src/stm32f4xx_it.c **** 
 282:Core/Src/stm32f4xx_it.c **** /**
 283:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USB On The Go FS global interrupt.
 284:Core/Src/stm32f4xx_it.c ****   */
 285:Core/Src/stm32f4xx_it.c **** void OTG_FS_IRQHandler(void)
 286:Core/Src/stm32f4xx_it.c **** {
 378              		.loc 1 286 1 view -0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 0
 381              		@ frame_needed = 0, uses_anonymous_args = 0
 382              		@ link register save eliminated.
 287:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN OTG_FS_IRQn 0 */
 288:Core/Src/stm32f4xx_it.c **** 
 289:Core/Src/stm32f4xx_it.c ****   /* USER CODE END OTG_FS_IRQn 0 */
 290:Core/Src/stm32f4xx_it.c ****   HAL_PCD_IRQHandler(&hpcd_USB_OTG_FS);
 383              		.loc 1 290 3 view .LVU44
 384 0000 0148     		ldr	r0, .L31
 385 0002 FFF7FEBF 		b	HAL_PCD_IRQHandler
 386              	.LVL9:
 387              	.L32:
 388 0006 00BF     		.align	2
 389              	.L31:
 390 0008 00000000 		.word	hpcd_USB_OTG_FS
 391              		.cfi_endproc
 392              	.LFE249:
 394              		.section	.text.DMA2_Stream6_IRQHandler,"ax",%progbits
 395              		.align	1
 396              		.p2align 2,,3
 397              		.global	DMA2_Stream6_IRQHandler
 398              		.syntax unified
 399              		.thumb
 400              		.thumb_func
 402              	DMA2_Stream6_IRQHandler:
 403              	.LFB250:
 291:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN OTG_FS_IRQn 1 */
 292:Core/Src/stm32f4xx_it.c **** 
 293:Core/Src/stm32f4xx_it.c ****   /* USER CODE END OTG_FS_IRQn 1 */
 294:Core/Src/stm32f4xx_it.c **** }
 295:Core/Src/stm32f4xx_it.c **** 
 296:Core/Src/stm32f4xx_it.c **** /**
 297:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream6 global interrupt.
 298:Core/Src/stm32f4xx_it.c ****   */
 299:Core/Src/stm32f4xx_it.c **** void DMA2_Stream6_IRQHandler(void)
 300:Core/Src/stm32f4xx_it.c **** {
 404              		.loc 1 300 1 view -0
 405              		.cfi_startproc
 406              		@ args = 0, pretend = 0, frame = 0
 407              		@ frame_needed = 0, uses_anonymous_args = 0
 408              		@ link register save eliminated.
ARM GAS  /tmp/ccDxVoG4.s 			page 13


 301:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream6_IRQn 0 */
 302:Core/Src/stm32f4xx_it.c **** 
 303:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream6_IRQn 0 */
 304:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart6_tx);
 409              		.loc 1 304 3 view .LVU46
 410 0000 0148     		ldr	r0, .L34
 411 0002 FFF7FEBF 		b	HAL_DMA_IRQHandler
 412              	.LVL10:
 413              	.L35:
 414 0006 00BF     		.align	2
 415              	.L34:
 416 0008 00000000 		.word	hdma_usart6_tx
 417              		.cfi_endproc
 418              	.LFE250:
 420              		.section	.text.DMA2_Stream7_IRQHandler,"ax",%progbits
 421              		.align	1
 422              		.p2align 2,,3
 423              		.global	DMA2_Stream7_IRQHandler
 424              		.syntax unified
 425              		.thumb
 426              		.thumb_func
 428              	DMA2_Stream7_IRQHandler:
 429              	.LFB251:
 305:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream6_IRQn 1 */
 306:Core/Src/stm32f4xx_it.c **** 
 307:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream6_IRQn 1 */
 308:Core/Src/stm32f4xx_it.c **** }
 309:Core/Src/stm32f4xx_it.c **** 
 310:Core/Src/stm32f4xx_it.c **** /**
 311:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream7 global interrupt.
 312:Core/Src/stm32f4xx_it.c ****   */
 313:Core/Src/stm32f4xx_it.c **** void DMA2_Stream7_IRQHandler(void)
 314:Core/Src/stm32f4xx_it.c **** {
 430              		.loc 1 314 1 view -0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              		@ link register save eliminated.
 315:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream7_IRQn 0 */
 316:Core/Src/stm32f4xx_it.c **** 
 317:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream7_IRQn 0 */
 318:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_tx);
 435              		.loc 1 318 3 view .LVU48
 436 0000 0148     		ldr	r0, .L37
 437 0002 FFF7FEBF 		b	HAL_DMA_IRQHandler
 438              	.LVL11:
 439              	.L38:
 440 0006 00BF     		.align	2
 441              	.L37:
 442 0008 00000000 		.word	hdma_usart1_tx
 443              		.cfi_endproc
 444              	.LFE251:
 446              		.text
 447              	.Letext0:
 448              		.file 2 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 449              		.file 3 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 450              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
ARM GAS  /tmp/ccDxVoG4.s 			page 14


 451              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 452              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 453              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 454              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 455              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 456              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usb.h"
 457              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pcd.h"
 458              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
ARM GAS  /tmp/ccDxVoG4.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccDxVoG4.s:20     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccDxVoG4.s:27     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccDxVoG4.s:45     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccDxVoG4.s:52     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccDxVoG4.s:69     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccDxVoG4.s:76     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccDxVoG4.s:93     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccDxVoG4.s:100    .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccDxVoG4.s:117    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccDxVoG4.s:124    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccDxVoG4.s:141    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccDxVoG4.s:148    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccDxVoG4.s:161    .text.EXTI0_IRQHandler:0000000000000000 $t
     /tmp/ccDxVoG4.s:168    .text.EXTI0_IRQHandler:0000000000000000 EXTI0_IRQHandler
     /tmp/ccDxVoG4.s:183    .text.EXTI3_IRQHandler:0000000000000000 $t
     /tmp/ccDxVoG4.s:190    .text.EXTI3_IRQHandler:0000000000000000 EXTI3_IRQHandler
     /tmp/ccDxVoG4.s:205    .text.EXTI4_IRQHandler:0000000000000000 $t
     /tmp/ccDxVoG4.s:212    .text.EXTI4_IRQHandler:0000000000000000 EXTI4_IRQHandler
     /tmp/ccDxVoG4.s:227    .text.CAN1_RX0_IRQHandler:0000000000000000 $t
     /tmp/ccDxVoG4.s:234    .text.CAN1_RX0_IRQHandler:0000000000000000 CAN1_RX0_IRQHandler
     /tmp/ccDxVoG4.s:248    .text.CAN1_RX0_IRQHandler:0000000000000008 $d
     /tmp/ccDxVoG4.s:253    .text.EXTI9_5_IRQHandler:0000000000000000 $t
     /tmp/ccDxVoG4.s:260    .text.EXTI9_5_IRQHandler:0000000000000000 EXTI9_5_IRQHandler
     /tmp/ccDxVoG4.s:275    .text.TIM1_BRK_TIM9_IRQHandler:0000000000000000 $t
     /tmp/ccDxVoG4.s:282    .text.TIM1_BRK_TIM9_IRQHandler:0000000000000000 TIM1_BRK_TIM9_IRQHandler
     /tmp/ccDxVoG4.s:311    .text.TIM1_BRK_TIM9_IRQHandler:0000000000000014 $d
     /tmp/ccDxVoG4.s:317    .text.DMA2_Stream1_IRQHandler:0000000000000000 $t
     /tmp/ccDxVoG4.s:324    .text.DMA2_Stream1_IRQHandler:0000000000000000 DMA2_Stream1_IRQHandler
     /tmp/ccDxVoG4.s:338    .text.DMA2_Stream1_IRQHandler:0000000000000008 $d
     /tmp/ccDxVoG4.s:343    .text.CAN2_RX0_IRQHandler:0000000000000000 $t
     /tmp/ccDxVoG4.s:350    .text.CAN2_RX0_IRQHandler:0000000000000000 CAN2_RX0_IRQHandler
     /tmp/ccDxVoG4.s:364    .text.CAN2_RX0_IRQHandler:0000000000000008 $d
     /tmp/ccDxVoG4.s:369    .text.OTG_FS_IRQHandler:0000000000000000 $t
     /tmp/ccDxVoG4.s:376    .text.OTG_FS_IRQHandler:0000000000000000 OTG_FS_IRQHandler
     /tmp/ccDxVoG4.s:390    .text.OTG_FS_IRQHandler:0000000000000008 $d
     /tmp/ccDxVoG4.s:395    .text.DMA2_Stream6_IRQHandler:0000000000000000 $t
     /tmp/ccDxVoG4.s:402    .text.DMA2_Stream6_IRQHandler:0000000000000000 DMA2_Stream6_IRQHandler
     /tmp/ccDxVoG4.s:416    .text.DMA2_Stream6_IRQHandler:0000000000000008 $d
     /tmp/ccDxVoG4.s:421    .text.DMA2_Stream7_IRQHandler:0000000000000000 $t
     /tmp/ccDxVoG4.s:428    .text.DMA2_Stream7_IRQHandler:0000000000000000 DMA2_Stream7_IRQHandler
     /tmp/ccDxVoG4.s:442    .text.DMA2_Stream7_IRQHandler:0000000000000008 $d

UNDEFINED SYMBOLS
HAL_GPIO_EXTI_IRQHandler
HAL_CAN_IRQHandler
hcan1
HAL_TIM_IRQHandler
htim1
htim9
HAL_DMA_IRQHandler
hdma_usart6_rx
hcan2
HAL_PCD_IRQHandler
hpcd_USB_OTG_FS
hdma_usart6_tx
ARM GAS  /tmp/ccDxVoG4.s 			page 16


hdma_usart1_tx
